# Begin: Prerequisites
- hosts: all
  gather_facts: false
  user: ubuntu
  become: yes
  become_user: root
  tasks:
    - name: Verify SSH connection
      ansible.builtin.wait_for_connection:
      
    - name: Cloud-init done
      ansible.builtin.raw:  while [ ! -f /var/lib/cloud/instance/boot-finished]; do sleep 10s; done
      changed_when: false

    - name: Check if Python 3 symlink exists
      ansible.builtin.stat:
        path: /usr/bin/python
      register: python_symlink

    - name: Create Python 3 symlink if not exists
      ansible.builtin.raw: ln -s /usr/bin/python3 /usr/bin/python
      when: not python_symlink.stat.exists
# End: Prerequisites


# Begin: Install Software
- hosts: all
  user: ubuntu
  become: yes
  become_user: root
  tasks:
    # - name: Create an ext4 filesystem on /dev/nvme1n1
    #   community.general.filesystem:
    #     fstype: ext4
    #     state: present
    #     dev: /dev/nvme1n1

    # - name: Fetch the UUID of /dev/nvme1n1
    #   command: blkid -s UUID -o value /dev/nvme1n1
    #   changed_when: false
    #   register: blkid_out

    # - name: Mount /dev/nvme1n1 by UUID
    #   ansible.posix.mount:
    #     path: /mnt
    #     src: UUID={{ blkid_out.stdout }}
    #     fstype: ext4
    #     opts: defaults
    #     state: mounted

    # - name: Resize disk of /dev/nvme1n1
    #   filesystem:
    #     fstype: ext4
    #     dev: /dev/nvme1n1
    #     resizefs: yes

    # deprecated warning is a bug
    # https://github.com/ansible-collections/ansible.posix/issues/468
    - name: Synchronization benchmark of rapsqlbench to remote
      ansible.posix.synchronize:
        src: ../benchmark
        dest: /mnt

    - name: Synchronization rapsql-docker of rapsqlbench to remote
      ansible.posix.synchronize:
        src: ../rapsql-docker
        dest: /mnt

    - name: Install required packages ca-certificates, curl, gnupg
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
        state: present

    - name: Check if Docker's official GPG key exists
      ansible.builtin.stat:
        path: /etc/apt/trusted.gpg.d/docker-archive-keyring.gpg
      register: gpg_check

    - name: Add Docker's official GPG key
      shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/docker-archive-keyring.gpg
      when: not gpg_check.stat.exists

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
      when: not gpg_check.stat.exists

    - name: Install Docker packages
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose
        update_cache: yes

    - name: Add user to the 'docker' group
      user:
        name: ubuntu
        groups: docker
      tags: docker

# # Begin: Change Docker Storage Location
# - hosts: all
#   user: ubuntu
#   become: yes
#   become_user: root
#   tasks:
#     # check if the new docker storage location exists
#     - name: Check if desired docker storage location exists
#       ansible.builtin.stat:
#         path: /mnt/docker/
#       register: dir_check
#       tags: docker

#     - name: Create docker storage location if not exists
#       ansible.builtin.file:
#         path: /mnt/docker
#         state: directory
#       tags: docker
#         # mode: '0755'

#     - name: Stop docker service
#       ansible.builtin.systemd:
#         state: stopped
#         name: docker
#       tags: docker
#       when: not dir_check.stat.exists

#     - name: Copy docker data to new location
#       ansible.builtin.shell: rsync -aP /var/lib/docker/ /mnt/docker
#       tags: docker
#       when: not dir_check.stat.exists

#     - name: Change docker storage location
#       ansible.builtin.lineinfile:
#         path: /lib/systemd/system/docker.service
#         regexp: '^ExecStart='
#         line: ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --data-root /mnt/docker
#       tags: docker
#       when: not dir_check.stat.exists

#     - name: Start docker with reloaded daemon
#       ansible.builtin.systemd:
#         daemon_reload: true
#         state: started
#         name: docker
#       tags: docker
#       when: not dir_check.stat.exists
# # End: Change Docker Storage Location


# Start: Perform rapsql benchmark
- hosts: all
  user: ubuntu
  become: yes
  become_user: root
  tasks:
    - name: Deploy rapsql database
      community.docker.docker_compose:
        project_src: /mnt/rapsql-docker 
        project_name: rapsqlbench
        build: no
        pull: yes
      register: rapsqldb

    # - name: Show rapsqldb results
    #   ansible.builtin.debug:
    #     var: rapsqldb
    
    - name: Verify rapsqldb is running
      ansible.builtin.assert:
        that: 
          - "rapsqldb.services.rapsql.rapsqlcontainer.state.running"

# INSERT WAITING TIME!!!
    - name: Sleep for 60 seconds and continue with play
      ansible.builtin.wait_for:
        timeout: 60
      delegate_to: localhost

    - name: Perform rapsql benchmark by input triple value
      community.docker.docker_container_exec:
        container: rapsqlcontainer
        # command: /bin/bash rapsqlbench.sh -g {{ graphname }} -t {{ triples }} -m {{ mem }} -c {{ cores }} -i {{ iter }}
        command: /bin/bash rapsqlbench.sh -g {{ g }} -t {{ t }} -m 250000 -c 32 -i {{ i }}
        chdir: /mnt
      register: rapsqlbench
      
    # - name: Show rapsqlbench results
    #   ansible.builtin.debug:
    #     var: rapsqlbench


# End: Perform rapsql benchmark


## Start: Fetch Results
# - hosts: all
#   user: ubuntu
#   become: yes
#   become_user: root
#   tasks:
    # - name: Synchronize measurement from remote
    #   ansible.posix.synchronize:
    #     src: /mnt/benchmark/measurement/
    #     dest: ../results/aws/{{ version }}/measurement
    #     mode: pull
    #     delete: no

    # - name: Synchronize queries from remote
    #   ansible.posix.synchronize:
    #     src: /mnt/benchmark/queries/cypher/
    #     dest: ../results/aws/{{ version }}/queries
    #     mode: pull
    #     delete: no
    
    # - name: Synchronize data from remote
    #   ansible.posix.synchronize:
    #     src: /mnt/benchmark/data/
    #     dest: ../results/aws/{{ version }}/data
    #     mode: pull
    #     delete: no    
    
## End: Fetch Results
